{"version":3,"sources":["App.js","selector/selector.js","action/actions.js","reducers/reducer.js","store/store.js","index.js"],"names":["connect","state","display","store","getDisplay","dispatch","updateDisplay","type","payload","input","operation","addition","equal","subtraction","multiplication","division","cancelDisplay","clearDisplay","props","handleClick","e","name","target","className","value","onClick","initialState","accumulated","prevOp","history","createStore","action","slice","length","states","maths","math","toString","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a251d9b.chunk.js","sourcesContent":["import './App.css';\nimport {getDisplay} from './selector/selector';\nimport {connect}  from 'react-redux';\nimport {updateDisplay} from './action/actions.js';\nimport {addition} from './action/actions';\nimport {subtraction} from './action/actions';\nimport {multiplication} from './action/actions';\nimport {division} from './action/actions';\nimport {clearDisplay} from './action/actions';\nimport {equal} from './action/actions';\nimport {cancelDisplay} from \"./action/actions\";\nfunction App(props) {\n\n   const  handleClick = (e)=>{\n       const name = e.target.name;\n       \n       if(name === '+'){\n        props.addition(name);\n       }else if(name === '-'){\n        props.subtraction(name);  \n       }else if(name === '*'){\n        props.multiplication(name);  \n       }else if(name === '/'){\n        props.division(name);  \n       }else if(name === 'clear'){\n        props.clearDisplay(name);  \n       }else if(name === 'equal'){\n        props.equal(name);  \n       }else if(name === 'cancel'){\n        props.cancelDisplay(name);  \n       }\n       else{\n         props.updateDisplay(name);\n       }\n    }\n  return (\n       <div className='containers'>\n      <form>\n         <input type='text' value={props.display}  />\n      </form>\n        <div className=\"items\">\n       <button onClick={handleClick}  name='clear'  className=\"clear\" >Clear</button>\n       <button onClick={handleClick}  name='cancel' >C</button>\n       <button onClick={handleClick}  name='/' >&divide;</button>\n       <button onClick={handleClick}  name='7' >7</button>\n       <button onClick={handleClick}  name='8' >8</button>\n       <button onClick={handleClick}  name='9' >9</button>\n       <button onClick={handleClick}  name='*' >&times;</button>\n       <button onClick={handleClick}  name='4' >4</button>\n       <button onClick={handleClick}  name='5' >5</button>\n       <button onClick={handleClick}  name='6' >6</button>\n       <button onClick={handleClick}  name='-' >&ndash;</button>\n       <button onClick={handleClick}  name='1' >1</button>\n       <button onClick={handleClick}  name='2' >2</button>\n       <button onClick={handleClick}  name='3' >3</button>\n       <button onClick={handleClick}  name='+' >+</button>\n       <button onClick={handleClick}  name='0' >0</button>\n       <button onClick={handleClick}  name=\"equal\" className=\"equal\"  >=</button>\n       </div>\n       </div>\n  );\n}\n \nconst mapStateToProps = (state)=>{\n   const displayValue = getDisplay(state);\n   return({\n     display : displayValue\n   });\n};\nconst mapDispatchToProps = dispatch => ({\n  updateDisplay: display => dispatch(updateDisplay(display)),\n  addition: display => dispatch(addition(display)),\n  equal: display => dispatch(equal(display)),\n  subtraction: display => dispatch(subtraction(display)),\n  multiplication: display => dispatch(multiplication(display)),\n  division: display => dispatch(division(display)),\n  cancelDisplay: display => dispatch(cancelDisplay(display)),\n  clearDisplay: display => dispatch(clearDisplay(display))\n});\nexport default connect(mapStateToProps,mapDispatchToProps )(App);\n\n","export const  getDisplay = store => store.display;","\r\nexport const updateDisplay = (content)=>{\r\n    return{\r\n        type:\"UPDATE\",\r\n        payload:{\r\n            input:content,\r\n            operation:\"num\"\r\n        }\r\n       \r\n    }\r\n}\r\nexport const addition = (content)=>{\r\n    return{\r\n        type:\"ADD\",\r\n        payload:{\r\n            operation:\"operator\"\r\n        }\r\n }};\r\n export const subtraction = (content)=>{\r\n    return {\r\n        type : \"SUBSTRACT\",\r\n        payload : {\r\n            operation: \"operator\"\r\n        }\r\n}};\r\nexport const multiplication = (content)=>{\r\n    return {\r\n        type : \"MULTIPLY\",\r\n        payload : {\r\n            operation: \"operator\"\r\n        }\r\n}};\r\nexport const division = (content)=>{\r\n    return {\r\n        type : \"DIVIDE\",\r\n        payload : {\r\n            operation: \"operator\"\r\n        }\r\n}};\r\nexport const clearDisplay = (content)=>{\r\n    return {\r\n        type : \"CLEAR\",\r\n        payload : {\r\n            operation: \"clear\"\r\n        }\r\n}};\r\nexport const cancelDisplay = (content)=>{\r\n    return {\r\n        type : \"CANCEL\",\r\n        payload : {\r\n            operation: \"cancel\"\r\n        }\r\n}};\r\n export const equal = (content)=>{\r\n    return{\r\n        type:\"EQUAL\",\r\n        payload:{\r\n            operation:\"equal\"\r\n        }\r\n }};\r\n","import * as math from \"mathjs\";\r\n\r\n\r\nconst initialState = {\r\n    display: '0',\r\n    accumulated: '0',\r\n    prevOp : '',\r\n    history : '0' \r\n}\r\n\r\nexport  const rootReducer = (state = initialState , action)=>{\r\n      switch(action.type){\r\n          case \"UPDATE\":{\r\n             const updateDisplay = action.payload;\r\n              return {\r\n                ...state,\r\n                display: state.display == '0' || state.prevOp === \"operator\" ? updateDisplay.input\r\n                  : state.display + updateDisplay.input,\r\n                prevOp: updateDisplay.operation,\r\n              }\r\n            }\r\n          case \"ADD\":{\r\n            const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n            : state.history;\r\n           return {\r\n                ...state,\r\n                display: state.display,\r\n                history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" + \"\r\n                  : state.accumulated != \"0\" ? state.accumulated + \" + \"\r\n                    : history() + state.display + \" + \",\r\n                prevOp: \"operator\"\r\n              }\r\n          }\r\n          case \"SUBSTRACT\": {\r\n            const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n              : state.history;\r\n            return {\r\n              ...state,\r\n              display: state.display,\r\n              history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" - \"\r\n                : state.accumulated != \"0\" ? state.accumulated + \" - \"\r\n                  : history() + state.display + \" - \",\r\n              prevOp: \"operator\"\r\n            }\r\n          }\r\n          case \"MULTIPLY\": {\r\n            const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n              : state.history;      \r\n            return {\r\n              ...state,\r\n              display: state.display,\r\n              history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" * \"\r\n                : state.accumulated != \"0\" ? state.accumulated + \" * \"\r\n                  : history() + state.display + \" * \",\r\n              prevOp: \"operator\"\r\n            }\r\n          }\r\n      \r\n          case \"DIVIDE\": {\r\n            const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n              : state.history;\r\n      \r\n            return {\r\n              ...state,\r\n              display: state.display,\r\n              history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" / \"\r\n                : state.accumulated != \"0\" ? state.accumulated + \" / \"\r\n                  : history() + state.display + \" / \",\r\n              prevOp: \"operator\"\r\n            }\r\n          }\r\n          // clear resets state\r\n          case \"CANCEL\": {\r\n            \r\n            return {\r\n                ...state,\r\n                \r\n               display :  state.display.slice(0,state.display.length - 1),\r\n               \r\n            }\r\n          }\r\n          case \"CLEAR\": {\r\n            return {\r\n              ...state,\r\n              display: '0',\r\n              prevOp: \"clear\",\r\n              accumulated: 0,\r\n              history: \"0\"\r\n            }\r\n          }\r\n          case \"EQUAL\": {\r\n            let states = state.history + state.display;\r\n           let maths = math.evaluate(states);\r\n            if (state.prevOp === \"equal\") {\r\n              return {\r\n                ...state\r\n              }\r\n            } else {\r\n              return {\r\n                ...state,\r\n                history: math.round(maths, 4).toString(),\r\n                display: math.round(maths,4).toString(),\r\n                accumulated: maths.toString(),\r\n                prevOp: \"equal\",\r\n              }\r\n            }\r\n          }\r\n          default: return state;\r\n          }\r\n      }\r\n","import {createStore} from 'redux';\r\nimport {rootReducer} from '../reducers/reducer';\r\n\r\nexport  const store =  createStore(\r\n     rootReducer ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\n\nstore.subscribe(()=>{console.log(store.getState())});\nReactDOM.render(\n     <Provider store={store}>\n      <App />\n     </Provider>\n,document.getElementById('root'));\n"],"sourceRoot":""}